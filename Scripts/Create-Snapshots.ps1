#requires -version 5
<#
.SYNOPSIS
  <Overview of script>
.DESCRIPTION
  <Brief description of script>
.PARAMETER <Parameter_Name>
    <Brief description of parameter input required. Repeat this attribute if required>
.INPUTS
  <Inputs if any, otherwise state None>
.OUTPUTS
  <Outputs if any, otherwise state None - example: Log file stored in C:\Windows\Temp\<name>.log>
.NOTES
  Version:        1.0
  Author:         schaedlich.s@gmail.com
  Creation Date:  2019-11-07
  Purpose/Change: Initial script development
  
.EXAMPLE
  <Example goes here. Repeat this attribute for more than one example>
#>

#---------------------------------------------------------[Initialisations]--------------------------------------------------------

#Set Error Action to Silently Continue
#$ErrorActionPreference = "SilentlyContinue"

#----------------------------------------------------------[Declarations]----------------------------------------------------------

#Global Variables
$scriptPath = 'd:\07_Git\PowerShellScripts\Scripts\'
$scriptSources = Join-Path -Path $scriptPath -ChildPath sources
$VMs = Get-Content (Join-Path -Path $scriptSources -ChildPath virtualMachines.txt)

#Name of Snapshot
$snapshotDate = Get-Date -Format 'yyyy-MM-dd'
$snapshotTemp = 'ISD-Patchtag'
$snapshotName = Join-Path -Path $snapshotDate -ChildPath $snapshotTemp


#-----------------------------------------------------------[Functions]------------------------------------------------------------

#-----------------------------------------------------------[Execution]------------------------------------------------------------

foreach ($VM in $VMs) {
    Shutdown-VMGuest $VM -Confirm:$false
    $VMGuest = Get-VMGuest $VM
    $VMIP = $VMGuest.IPAddress | Select-String -Pattern 10.10.*

    do {
        Write-Host "$VM wir herunter gefahren" -ForegroundColor White
        Start-Sleep -Seconds 1
    }
    until (-not (Test-Connection -ComputerName $VMIP -Quiet))

    Write-Host "$VM wurde herunter gefahren" -ForegroundColor Blue
}

foreach ($VM in $VMs) {
    $shutDownTest = Get-VM $VM
    
    if ($shutDownTest.PowerState -like '*PoweredOff*') {
        Write-Host "Erstelle Snapshot fuer $VM" -ForegroundColor White
        New-Snapshot -VM $VM -Name $snapshotName -Description 'Automated generated by script'
        Start-Sleep -Seconds 5
    }
    else {
        Write-Host "Snapshot fuer $VM konnte nicht erstellt werden" -ForegroundColor Red
    }
}

foreach ($VM in $VMs) {
    Start-VM $VM
}