#requires -version 5
<#
.SYNOPSIS
  Shutdown VMs from a source list, creates snapshots and start the VMs agein.
.DESCRIPTION
  <Brief description of script>
.PARAMETER <Parameter_Name>
    <Brief description of parameter input required. Repeat this attribute if required>
.INPUTS
  <Inputs if any, otherwise state None>
.OUTPUTS
  <Outputs if any, otherwise state None - example: Log file stored in C:\Windows\Temp\<name>.log>
.NOTES
  Version:        1.0
  Author:         schaedlich.s@gmail.com
  Creation Date:  2019-11-07
  Purpose/Change: Initial script development
  
.EXAMPLE
  Create-Snapshot.ps1
#>

#---------------------------------------------------------[Initialisations]--------------------------------------------------------

#Set Error Action to Silently Continue
#$ErrorActionPreference = "SilentlyContinue"

#----------------------------------------------------------[Declarations]----------------------------------------------------------

#Global Variables
$scriptPath = 'd:\07_Git\PowerShellScripts\Scripts\'
$scriptSources = Join-Path -Path $scriptPath -ChildPath sources
$VMs = Get-Content (Join-Path -Path $scriptSources -ChildPath virtualMachines.txt)

#Name of Snapshot
$snapshotDate = Get-Date -Format 'yyyy-MM-dd'
$snapshotTemp = 'ISD-Patchtag'
$snapshotName = $snapshotDate + "_" + $snapshotTemp

#-----------------------------------------------------------[Functions]------------------------------------------------------------

#-----------------------------------------------------------[Execution]------------------------------------------------------------

foreach ($VM in $VMs) {
  Shutdown-VMGuest $VM -Confirm:$false
  $VMGuest = Get-VMGuest $VM
  $VMIP = $VMGuest.IPAddress | Select-String -Pattern 10.10.*

  do {
    Write-Host "Shuting down $VM" -ForegroundColor White
    Start-Sleep -Seconds 1
  }
  until (-not (Test-Connection -ComputerName $VMIP -Quiet))

  Write-Host "$VM stopped" -ForegroundColor Blue
}

foreach ($VM in $VMs) {
  $shutDownTest = Get-VM $VM
    
  if ($shutDownTest.PowerState -like '*PoweredOff*') {
    Write-Host "Create snapshot for $VM" -ForegroundColor White
    New-Snapshot -VM $VM -Name $snapshotName -Description 'Automated generated by script'
    Start-Sleep -Seconds 5
  }
  else {
    Write-Host "Snapshot for $VM created" -ForegroundColor Red
  }
}

foreach ($VM in $VMs) {
  Start-VM $VM
  Write-Host "Starting $VM"
}

#-----------------------------------------------------------[Report as Mail]-------------------------------------------------------

New-Item -Type File SnapshotReport.txt
Out-File -FilePath SnapshotReport.txt -InputObject "Following snapshots were created:"
Get-VM | Get-Snapshot | Where-Object Name -Like $snapshotName | Format-Table Name, Description, VM -AutoSize | Out-File -FilePath SnapshotReport.txt -NoClobber -Append
Send-MailMessage -SmtpServer "outlook.jmrlp.de" -to "sven.schaedlich@jm.rlp.de" -from "PowerShell <helpdesk@jm.rlp.de>" -Subject "Results of Create-Snapshot" -body "Anbei der Snapshotreport f√ºr den Patchday" -Encoding UTF8 -Attachments .\SnapshotReport.txt
Remove-Item .\SnapshotReport.txt -Confirm:$false

